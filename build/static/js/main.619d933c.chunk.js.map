{"version":3,"sources":["second/contex.js","first/ID.js","first/tiles.js","first/FirstContent.js","second/Slider.js","second/Board.js","second/SecondContent.js","App.js","reportWebVitals.js","index.js"],"names":["style","Light","color","background","Dark","Context","React","createContext","ID","this","props","id","Component","Tiles","state","backstyle","changeid","document","documentElement","setProperty","context","className","backgroundColor","onClick","changer","contextType","FirstConent","iter","ArrId","tile","iterator","tileID","push","length","first","findIndex","e","second","console","log","items","setState","Find","tiles","map","x","bind","Slider","ChangeStyle","border","body","querySelector","Board","text","SecondContent","toggleContex","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.619d933c.chunk.js","sourcesContent":["import React from \"react\"\r\nexport const style = {\r\n    Light:{\r\n        color:'rgb(58, 56, 54)',\r\n        background:'rgb(170, 172, 172)'\r\n\r\n    },\r\n    Dark:{\r\n        color:'rgb(170, 172, 172)',\r\n        background:'rgb(58, 56, 54)'\r\n    }\r\n}\r\n\r\nexport const Context = React.createContext(style.Dark);","import React from 'react'\r\nclass ID extends React.Component{\r\n    render(){\r\n        return(\r\n        <p>My id: {this.props.id}</p>\r\n        );\r\n    }\r\n}\r\nexport default ID;","import React from 'react'\r\nimport { Context } from '../second/contex';\r\nimport ID from './ID'\r\nclass Tiles extends React.Component {\r\n    state = {\r\n        id: this.props.id\r\n    }\r\n    changer () {\r\n        if(this.props.backstyle === 'tiles'){\r\n            \r\n        this.props.changeid(this.props.id)\r\n    }\r\n       \r\n    }\r\n    render(){\r\n        const root = document.documentElement\r\n        root.style.setProperty('--bg',this.context.color)\r\n        return(\r\n            <div className={this.props.backstyle} style={{\r\n                backgroundColor:this.context.color,\r\n                color:this.context.backgroundColor\r\n            }}>\r\n                <button onClick={()=>this.changer()}> klik </button>\r\n                <ID id = {this.props.id} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nTiles.contextType = Context;\r\nexport default Tiles;","import React from 'react';\r\nimport Tiles from './tiles';\r\nexport default class FirstConent extends React.Component{\r\n    iter = 0\r\n    ArrId = []\r\n    state = {\r\n      \r\n      tile:[\r\n        {id: this.iterator(),backstyle:'tiles'},\r\n        {id: this.iterator(),backstyle:'tiles'}, \r\n        {id: this.iterator(),backstyle:'tiles'},\r\n        {id: this.iterator(),backstyle:'tiles'}\r\n      ]\r\n    }\r\n    iterator(){\r\n     \r\n     return this.iter++;\r\n    }\r\n    changeid(tileID){\r\n      this.ArrId.push(tileID);\r\n      if(this.ArrId[0] === this.ArrId[1]){\r\n        this.ArrId.length = 1;\r\n      }\r\n      else if(this.ArrId.length === 2 ){\r\n       const first = this.state.tile.findIndex((e)=>{\r\n          return e.id === this.ArrId[0];\r\n        });\r\n        const second = this.state.tile.findIndex((e)=>{\r\n          return e.id === this.ArrId[1];\r\n        });\r\n        console.log(first,second)\r\n         let items = [...this.state.tile];\r\n         items[first].id =  this.ArrId[1];\r\n         items[second].id = this.ArrId[0];\r\n         items[first].backstyle = 'tiles' //To reset animation\r\n        this.setState({items});\r\n  \r\n       \r\n  \r\n        this.ArrId.length = 0;\r\n    \r\n      }\r\n      else{\r\n        let items = [...this.state.tile];\r\n        const Find = this.state.tile.findIndex((e)=>{\r\n          return e.id === this.ArrId[0];\r\n        });\r\n        items[Find].backstyle = items[Find].backstyle = 'tilesClicked';\r\n        this.setState({items})\r\n      }\r\n     \r\n    }\r\n    render(){\r\n      const tiles = this.state.tile.map(x => {\r\n        return <Tiles id = {x.id} backstyle = {x.backstyle} changeid ={this.changeid.bind(this)}/>\r\n      })\r\n    return (\r\n      <div className=\"Content1\">\r\n            {tiles}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Context } from './contex';\r\nexport default class Slider extends React.Component{\r\n\r\n    render(){\r\n     \r\n        return(\r\n            <button onClick={this.props.ChangeStyle}\r\n            style={{\r\n                backgroundColor:this.context.background,\r\n                color:this.context.color,\r\n                border:this.context.background\r\n            }}\r\n            >Zmień tło\r\n            </button>\r\n        );\r\n    }\r\n\r\n}\r\nSlider.contextType = Context;","import React from 'react';\r\nimport Slider from './Slider';\r\nimport { Context } from './contex';\r\nconst body = document.querySelector('body')\r\nexport default class Board extends React.Component{\r\n    \r\n    render(){\r\n        body.style.backgroundColor = this.context.background;\r\n        return(\r\n        <div className=\"Content2\" style={{\r\n            backgroundColor : this.context.color, //To be opposite of background\r\n            color:this.context.background\r\n        }}>\r\n            <Slider ChangeStyle={this.props.ChangeStyle}/>\r\n           <p>{this.props.text}</p>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\nBoard.contextType = Context;\r\n","import React from 'react';\r\nimport Board from './Board';\r\nexport default class SecondContent extends React.Component{\r\n    state = {\r\n        text:'Randomowy tekst',\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n          \r\n                <Board ChangeStyle={()=>{this.props.toggleContex()}} text={this.state.text}/>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport FirstConent from './first/FirstContent';\nimport SecondContent from './second/SecondContent';\nimport { Context, style } from './second/contex';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n        style: style.Dark\n    }\n\n}\n\ntoggleContex(){\n   \n    this.setState({\n        style: this.state.style === style.Dark ? style.Light : style.Dark\n    });\n}\n  render(){\n    \n  return (\n    <div className=\"Content\">\n      <Context.Provider value={this.state.style}>\n        <FirstConent  />\n        <SecondContent toggleContex={()=>{this.toggleContex()}}/>\n      </Context.Provider>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}